% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/ctMultigroupFit.R
\name{ctMultigroupFit}
\alias{ctMultigroupFit}
\title{Fits a multiple group continuous time model.}
\usage{
ctMultigroupFit(datawide, groupings, ctmodelobj, fixedmodel = NA,
  freemodel = NA, freemodelvarlimits = NA, varzeroweight = 0,
  fitasgroup = TRUE, carefulFit = FALSE, retryattempts = 5,
  showInits = TRUE, confidenceintervals = NULL, plots = FALSE,
  summaries = FALSE, plotOptimization = FALSE, ...)
}
\arguments{
\item{datawide}{Wide format data, as used in \code{\link{ctFit}}.  See \code{\link{ctLongToWide}} to
easily convert long format data.}

\item{groupings}{Vector of character labels designating group membership for each row of datawide.
These will be prefixed on relevant parameter estimates in the summary.}

\item{ctmodelobj}{Continuous time model to fit, specified via \code{\link{ctModel}} function.}

\item{fixedmodel}{Modified version of ctmodelobj, wherein any parameters you wish to keep
fixed over groups should be given the value 'groupfixed'.
If specified, all other parameters will be free across groups.}

\item{freemodel}{Modified version of ctmodelobj, wherein any parameters you wish to free across groups
should be given the label 'groupfree'.
If specified, all other parameters will be fixed across groups.
If left NULL, the default, all parameters are free across groups.}

\item{freemodelvarlimits}{Experimental}

\item{varzeroweight}{Experimental}

\item{fitasgroup}{If FALSE, OpenMx models for each group are fit individually and output in a list.
By default, groups are specified and fit as sub-models of a single large OpenMx model.}

\item{carefulFit}{if TRUE, first fits the specified model with a penalised likelihood function
to force MANIFESTVAR, DRIFT, TRAITVAR, MANIFESTTRAITVAR parameters to remain close to 0, then
fits the specified model normally, using these estimates as starting values.
Can help with optimization, though results in user specified inits being ignored for the final fit.}

\item{retryattempts}{Number of fit retries to make.}

\item{showInits}{Displays start values prior to optimization}

\item{confidenceintervals}{Character vector of parameter labels to estimate confidence intervals for.
Unlike with \code{\link{ctFit}}, entire matrices cannot be specified.}

\item{plots}{Only relevant if fitasgroup=FALSE.  If TRUE, plots each model fit
with mean trajectory, autoregression and cross regression plots.}

\item{summaries}{Same as plots but for summary output.}

\item{plotOptimization}{plots graphs of optimization progress after fitting, uses OpenMx checkpointing.}

\item{...}{additional arguments to pass to \code{\link{ctFit}}.}
}
\value{
Returns either an OpenMx fit object (if fitasgroup=TRUE), or a list containing
individual ctsem fit objects.
}
\description{
Fits a single continuous time structural equation models to multiple groups (where each group contains 1 or more subjects),
by default, all parameters are free across groups.  Can also be used to easily estimate seperate models for each group.
}
\details{
Additional \code{\link{ctFit}} parameters may be specified as required.
}
\examples{
\dontrun{

#Two group model, all parameters except LAMBDA[3,1] constrained across groups.
data(ctExample4)
basemodel<-ctModel(n.latent=1, n.manifest=3, Tpoints=20,
                   LAMBDA=matrix(c(1, 'lambda2', 'lambda3'), nrow=3, ncol=1),
                   MANIFESTMEANS=matrix(c(0, 'manifestmean2', 'manifestmean3'),
                   nrow=3, ncol=1), TRAITVAR = 'auto')

freemodel<-basemodel
freemodel$LAMBDA[3,1]<-'groupfree'
groups<-paste0('g',rep(1:2, each=10),'_')

multif<-ctMultigroupFit(datawide=ctExample4, groupings=groups,
                       ctmodelobj=basemodel, freemodel=freemodel)
summary(multif)



#fixed model approach
fixedmodel<-basemodel
fixedmodel$LAMBDA[2,1]<-'groupfixed'
groups<-paste0('g',rep(1:2, each=10),'_')

multif<-ctMultigroupFit(datawide=ctExample4, groupings=groups,
                       ctmodelobj=basemodel, fixedmodel=fixedmodel)
summary(multif)
}
}
\seealso{
\code{\link{ctFit}} and \code{\link{ctModel}}
}

