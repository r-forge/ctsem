TRAITTDPREDCOV = matrix(0, nrow = 2, ncol = 7),
LAMBDA = diag(2), TRAITVAR = "auto")
f1 <- ctFit(datawide = ctExample2level, ctmodelobj = tdpredmodel,retryattempts=2)
f2 <- ctFit(datawide = ctExample2level, ctmodelobj = tdpredmodel,retryattempts=2)
f3 <- ctFit(datawide = ctExample2level, ctmodelobj = tdpredmodel,retryattempts=2)
f4 <- ctFit(datawide = ctExample2level, ctmodelobj = tdpredmodel,retryattempts=2)
f5 <- ctFit(datawide = ctExample2level, ctmodelobj = tdpredmodel,retryattempts=2)
sumll<- sum(f1$mxobj$output$minimum,f2$mxobj$output$minimum,f3$mxobj$output$minimum,f4$mxobj$output$minimum,f5$mxobj$output$minimum)
meanll <- sumll / 5
sumdifs<-sum( (f1$mxobj$output$minimum - meanll) + (f2$mxobj$output$minimum - meanll) + (f3$mxobj$output$minimum - meanll) +
(f4$mxobj$output$minimum - meanll) + (f5$mxobj$output$minimum - meanll) )
if(sumdifs < 10) checkfits <- TRUE
}
?mapply
?sapply
checkfits <- FALSE
while(checkfits==FALSE){
Tpoints=20
testm<-ctModel(Tpoints=Tpoints,n.latent=2,n.TDpred=1,n.TIpred=0,n.manifest=2,
LAMBDA=diag(1,2),
MANIFESTVAR=diag(.2,2),
DRIFT=matrix(c(-.3,.12,-.02,-.3),nrow=2,ncol=2),
TRAITVAR=matrix(c(.06,-.012,-.012,.071),ncol=2,nrow=2),
DIFFUSION=diag(c(.12,.3),2),
CINT=matrix(c(1,2),nrow=2),
T0MEANS=matrix(0,ncol=1,nrow=2),
T0VAR=diag(10,2),
TDPRED=matrix(c(.6,.4),nrow=2),
#   TRAITTDPREDCOV=matrix(c(0,0,0,0,0,rep(0,Tpoints-6),0,0,0,0,0,rep(0,Tpoints-6)),nrow=2,ncol=(Tpoints-1)),
TDPREDVAR=diag(c(rep(0,Tpoints-1)),Tpoints-1),
TDPREDMEANS=matrix(c(0,0,0,0,1,rep(0,Tpoints-6)),ncol=1,nrow=(Tpoints-1)))
testd<-ctGenerate(testm,n.subjects=50,burnin=3000) #generate data
#   indplot(testd,Tpoints=Tpoints,n.manifest=2,n.subjects=10,colourby="variable")
testdlevel<-testd
testdlevel[,paste0('TD1_T',5:(Tpoints-2))] <- 1
timestokeep=c(0,1,4,5,7,8,16,19)
deltaT<-timestokeep[-1] - timestokeep[-8]
testd<-testd[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testd<-cbind(testd,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
testdlevel<-testdlevel[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testdlevel<-cbind(testdlevel,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
# datawide<-ctRemoveObservations(testd,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
# datawidelevel<-ctRemoveObservations(testdlevel,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
ctExample2<-testd
colnames(ctExample2)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
ctExample2level<-testdlevel
colnames(ctExample2level)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
tdpredmodel <- ctModel(n.manifest = 2, n.latent = 2, n.TDpred = 1,
Tpoints = 8, manifestNames = c('LeisureTime', 'Happiness'),
TDpredNames = 'MoneyInt', latentNames = c('LeisureTime', 'Happiness'),
T0TDPREDCOV = matrix(0, nrow = 2, ncol = 7),
TRAITTDPREDCOV = matrix(0, nrow = 2, ncol = 7),
LAMBDA = diag(2), TRAITVAR = "auto")
ll<-c()
for( j in 1:5){
fit <- ctFit(datawide = ctExample2level, ctmodelobj = tdpredmodel,retryattempts=2)
assign(paste0('fit',j), fit)
ll<-c(ll,fit$mxobj$output$minimum)
print(ll)
llmean<-mean(ll)
lldifs<- lapply(ll,function(x) meanll - x)
sumdifs <- sum(lldifs)
if(sumdifs > 10) break
}
if(sumdifs < 10) checkfits <-TRUE
}
lldifs
checkfits <- FALSE
while(checkfits==FALSE){
Tpoints=20
testm<-ctModel(Tpoints=Tpoints,n.latent=2,n.TDpred=1,n.TIpred=0,n.manifest=2,
LAMBDA=diag(1,2),
MANIFESTVAR=diag(.2,2),
DRIFT=matrix(c(-.3,.12,-.02,-.3),nrow=2,ncol=2),
TRAITVAR=matrix(c(.06,-.012,-.012,.071),ncol=2,nrow=2),
DIFFUSION=diag(c(.12,.3),2),
CINT=matrix(c(1,2),nrow=2),
T0MEANS=matrix(0,ncol=1,nrow=2),
T0VAR=diag(10,2),
TDPRED=matrix(c(.6,.4),nrow=2),
#   TRAITTDPREDCOV=matrix(c(0,0,0,0,0,rep(0,Tpoints-6),0,0,0,0,0,rep(0,Tpoints-6)),nrow=2,ncol=(Tpoints-1)),
TDPREDVAR=diag(c(rep(0,Tpoints-1)),Tpoints-1),
TDPREDMEANS=matrix(c(0,0,0,0,1,rep(0,Tpoints-6)),ncol=1,nrow=(Tpoints-1)))
testd<-ctGenerate(testm,n.subjects=50,burnin=3000) #generate data
#   indplot(testd,Tpoints=Tpoints,n.manifest=2,n.subjects=10,colourby="variable")
testdlevel<-testd
testdlevel[,paste0('TD1_T',5:(Tpoints-2))] <- 1
timestokeep=c(0,1,4,5,7,8,16,19)
deltaT<-timestokeep[-1] - timestokeep[-8]
testd<-testd[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testd<-cbind(testd,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
testdlevel<-testdlevel[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testdlevel<-cbind(testdlevel,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
# datawide<-ctRemoveObservations(testd,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
# datawidelevel<-ctRemoveObservations(testdlevel,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
ctExample2<-testd
colnames(ctExample2)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
ctExample2level<-testdlevel
colnames(ctExample2level)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
tdpredmodel <- ctModel(n.manifest = 2, n.latent = 2, n.TDpred = 1,
Tpoints = 8, manifestNames = c('LeisureTime', 'Happiness'),
TDpredNames = 'MoneyInt', latentNames = c('LeisureTime', 'Happiness'),
T0TDPREDCOV = matrix(0, nrow = 2, ncol = 7),
TRAITTDPREDCOV = matrix(0, nrow = 2, ncol = 7),
LAMBDA = diag(2), TRAITVAR = "auto")
ll<-c()
for( j in 1:5){
fit <- ctFit(datawide = ctExample2level, ctmodelobj = tdpredmodel,retryattempts=2)
assign(paste0('fit',j), fit)
ll<-c(ll,fit$mxobj$output$minimum)[[1]]
print(ll)
llmean<-mean(ll)
lldifs<- lapply(ll,function(x) meanll - x)
sumdifs <- sum(lldifs)
if(sumdifs > 10) break
}
if(sumdifs < 10) checkfits <-TRUE
}
ll
llmean
lldifs<- lapply(ll,function(x) meanll - x)[[1]]
sumdifs <- sum(lldifs)
sumdifs
ll
llmean
lldifs<- lapply(ll,function(x) meanll - x)[[1]]
lldifs
x
ll
meanll
lldifs<- lapply(ll,function(x) llmean - x)[[1]]
sumdifs <- sum(lldifs)
if(sumdifs > 10) break
sumdifs
checkfits <- FALSE
while(checkfits==FALSE){
Tpoints=20
testm<-ctModel(Tpoints=Tpoints,n.latent=2,n.TDpred=1,n.TIpred=0,n.manifest=2,
LAMBDA=diag(1,2),
MANIFESTVAR=diag(.2,2),
DRIFT=matrix(c(-.3,.12,-.02,-.3),nrow=2,ncol=2),
TRAITVAR=matrix(c(.06,-.012,-.012,.071),ncol=2,nrow=2),
DIFFUSION=diag(c(.12,.3),2),
CINT=matrix(c(1,2),nrow=2),
T0MEANS=matrix(0,ncol=1,nrow=2),
T0VAR=diag(10,2),
TDPRED=matrix(c(.6,.4),nrow=2),
#   TRAITTDPREDCOV=matrix(c(0,0,0,0,0,rep(0,Tpoints-6),0,0,0,0,0,rep(0,Tpoints-6)),nrow=2,ncol=(Tpoints-1)),
TDPREDVAR=diag(c(rep(0,Tpoints-1)),Tpoints-1),
TDPREDMEANS=matrix(c(0,0,0,0,1,rep(0,Tpoints-6)),ncol=1,nrow=(Tpoints-1)))
testd<-ctGenerate(testm,n.subjects=50,burnin=3000) #generate data
#   indplot(testd,Tpoints=Tpoints,n.manifest=2,n.subjects=10,colourby="variable")
testdlevel<-testd
testdlevel[,paste0('TD1_T',5:(Tpoints-2))] <- 1
timestokeep=c(0,1,4,5,7,8,16,19)
deltaT<-timestokeep[-1] - timestokeep[-8]
testd<-testd[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testd<-cbind(testd,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
testdlevel<-testdlevel[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testdlevel<-cbind(testdlevel,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
# datawide<-ctRemoveObservations(testd,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
# datawidelevel<-ctRemoveObservations(testdlevel,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
ctExample2<-testd
colnames(ctExample2)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
ctExample2level<-testdlevel
colnames(ctExample2level)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
tdpredmodel <- ctModel(n.manifest = 2, n.latent = 2, n.TDpred = 1,
Tpoints = 8, manifestNames = c('LeisureTime', 'Happiness'),
TDpredNames = 'MoneyInt', latentNames = c('LeisureTime', 'Happiness'),
T0TDPREDCOV = matrix(0, nrow = 2, ncol = 7),
TRAITTDPREDCOV = matrix(0, nrow = 2, ncol = 7),
LAMBDA = diag(2), TRAITVAR = "auto")
ll<-c()
for( j in 1:5){
fit <- ctFit(datawide = ctExample2level, ctmodelobj = tdpredmodel,retryattempts=2)
assign(paste0('fit',j), fit)
ll<-c(ll,fit$mxobj$output$minimum)
print(ll)
llmean<-mean(ll)
lldifs<- lapply(ll,function(x) llmean - x)[[1]]
sumdifs <- sum(lldifs)
if(sumdifs > 10) break
}
if(sumdifs < 10) checkfits <-TRUE
}
sumdifs
checkfits <- FALSE
while(checkfits==FALSE){
Tpoints=20
testm<-ctModel(Tpoints=Tpoints,n.latent=2,n.TDpred=1,n.TIpred=0,n.manifest=2,
LAMBDA=diag(1,2),
MANIFESTVAR=diag(.2,2),
DRIFT=matrix(c(-.3,.12,-.02,-.3),nrow=2,ncol=2),
TRAITVAR=matrix(c(.06,-.012,-.012,.071),ncol=2,nrow=2),
DIFFUSION=diag(c(.12,.3),2),
CINT=matrix(c(1,2),nrow=2),
T0MEANS=matrix(0,ncol=1,nrow=2),
T0VAR=diag(10,2),
TDPRED=matrix(c(.6,.4),nrow=2),
#   TRAITTDPREDCOV=matrix(c(0,0,0,0,0,rep(0,Tpoints-6),0,0,0,0,0,rep(0,Tpoints-6)),nrow=2,ncol=(Tpoints-1)),
TDPREDVAR=diag(c(rep(0,Tpoints-1)),Tpoints-1),
TDPREDMEANS=matrix(c(0,0,0,0,1,rep(0,Tpoints-6)),ncol=1,nrow=(Tpoints-1)))
testd<-ctGenerate(testm,n.subjects=50,burnin=3000) #generate data
#   indplot(testd,Tpoints=Tpoints,n.manifest=2,n.subjects=10,colourby="variable")
testdlevel<-testd
testdlevel[,paste0('TD1_T',5:(Tpoints-2))] <- 1
timestokeep=c(0,1,4,5,7,8,16,19)
deltaT<-timestokeep[-1] - timestokeep[-8]
testd<-testd[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testd<-cbind(testd,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
testdlevel<-testdlevel[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testdlevel<-cbind(testdlevel,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
# datawide<-ctRemoveObservations(testd,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
# datawidelevel<-ctRemoveObservations(testdlevel,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
ctExample2<-testd
colnames(ctExample2)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
ctExample2level<-testdlevel
colnames(ctExample2level)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
tdpredmodel <- ctModel(n.manifest = 2, n.latent = 2, n.TDpred = 1,
Tpoints = 8, manifestNames = c('LeisureTime', 'Happiness'),
TDpredNames = 'MoneyInt', latentNames = c('LeisureTime', 'Happiness'),
T0TDPREDCOV = matrix(0, nrow = 2, ncol = 7),
TRAITTDPREDCOV = matrix(0, nrow = 2, ncol = 7),
LAMBDA = diag(2), TRAITVAR = "auto")
ll<-c()
for( j in 1:5){
fit <- ctFit(datawide = ctExample2level, ctmodelobj = tdpredmodel,retryattempts=2)
assign(paste0('fit',j), fit)
ll<-c(ll,fit$mxobj$output$minimum)
print(ll)
llmean<-mean(ll)
llsquareddifs<- lapply(ll,function(x) (llmean - x)^2)[[1]]
sumsquareddifs <- sum(llsquareddifs)
if(sumsquareddifs > 10) break
}
if(sumsquareddifs < 10) checkfits <-TRUE
}
ll
fit$mxobj
fit$mxobj$output$minimum
summary(fit)
checkfits <- FALSE
while(checkfits==FALSE){
Tpoints=20
testm<-ctModel(Tpoints=Tpoints,n.latent=2,n.TDpred=1,n.TIpred=0,n.manifest=2,
LAMBDA=diag(1,2),
MANIFESTVAR=diag(.2,2),
DRIFT=matrix(c(-.3,.12,-.02,-.3),nrow=2,ncol=2),
TRAITVAR=matrix(c(.06,-.012,-.012,.071),ncol=2,nrow=2),
DIFFUSION=diag(c(.12,.3),2),
CINT=matrix(c(1,2),nrow=2),
T0MEANS=matrix(0,ncol=1,nrow=2),
T0VAR=diag(10,2),
TDPRED=matrix(c(.6,.4),nrow=2),
#   TRAITTDPREDCOV=matrix(c(0,0,0,0,0,rep(0,Tpoints-6),0,0,0,0,0,rep(0,Tpoints-6)),nrow=2,ncol=(Tpoints-1)),
TDPREDVAR=diag(c(rep(0,Tpoints-1)),Tpoints-1),
TDPREDMEANS=matrix(c(0,0,0,0,1,rep(0,Tpoints-6)),ncol=1,nrow=(Tpoints-1)))
testd<-ctGenerate(testm,n.subjects=50,burnin=3000) #generate data
#   indplot(testd,Tpoints=Tpoints,n.manifest=2,n.subjects=10,colourby="variable")
testdlevel<-testd
testdlevel[,paste0('TD1_T',5:(Tpoints-2))] <- 1
timestokeep=c(0,1,4,5,7,8,16,19)
deltaT<-timestokeep[-1] - timestokeep[-8]
testd<-testd[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testd<-cbind(testd,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
testdlevel<-testdlevel[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testdlevel<-cbind(testdlevel,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
# datawide<-ctRemoveObservations(testd,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
# datawidelevel<-ctRemoveObservations(testdlevel,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
ctExample2<-testd
colnames(ctExample2)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
ctExample2level<-testdlevel
colnames(ctExample2level)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
tdpredmodel <- ctModel(n.manifest = 2, n.latent = 2, n.TDpred = 1,
Tpoints = 8, manifestNames = c('LeisureTime', 'Happiness'),
TDpredNames = 'MoneyInt', latentNames = c('LeisureTime', 'Happiness'),
T0TDPREDCOV = matrix(0, nrow = 2, ncol = 7),
TRAITTDPREDCOV = matrix(0, nrow = 2, ncol = 7),
LAMBDA = diag(2), TRAITVAR = "auto")
ll<-c()
for( j in 1:5){
fit <- ctFit(datawide = ctExample2level, ctmodelobj = tdpredmodel,retryattempts=2)
if(is.null(fit$mxobj$output$minimum)) {
j<-j-1
next
}
assign(paste0('fit',j), fit)
ll<-c(ll,fit$mxobj$output$minimum)
print(ll)
llmean<-mean(ll)
llsquareddifs<- lapply(ll,function(x) (llmean - x)^2)[[1]]
sumsquareddifs <- sum(llsquareddifs)
if(sumsquareddifs > 10) break
}
if(sumsquareddifs < 10) checkfits <-TRUE
}
sumsquareddifs
checkfits <- FALSE
while(checkfits==FALSE){
Tpoints=20
testm<-ctModel(Tpoints=Tpoints,n.latent=2,n.TDpred=1,n.TIpred=0,n.manifest=2,
LAMBDA=diag(1,2),
MANIFESTVAR=diag(.2,2),
DRIFT=matrix(c(-.3,.12,-.02,-.3),nrow=2,ncol=2),
TRAITVAR=matrix(c(.06,-.012,-.012,.071),ncol=2,nrow=2),
DIFFUSION=diag(c(.12,.3),2),
CINT=matrix(c(1,2),nrow=2),
T0MEANS=matrix(0,ncol=1,nrow=2),
T0VAR=diag(10,2),
TDPRED=matrix(c(.6,.4),nrow=2),
#   TRAITTDPREDCOV=matrix(c(0,0,0,0,0,rep(0,Tpoints-6),0,0,0,0,0,rep(0,Tpoints-6)),nrow=2,ncol=(Tpoints-1)),
TDPREDVAR=diag(c(rep(0,Tpoints-1)),Tpoints-1),
TDPREDMEANS=matrix(c(0,0,0,0,1,rep(0,Tpoints-6)),ncol=1,nrow=(Tpoints-1)))
testd<-ctGenerate(testm,n.subjects=50,burnin=3000) #generate data
#   indplot(testd,Tpoints=Tpoints,n.manifest=2,n.subjects=10,colourby="variable")
testdlevel<-testd
testdlevel[,paste0('TD1_T',5:(Tpoints-2))] <- 1
timestokeep=c(0,1,4,5,7,8,16,19)
deltaT<-timestokeep[-1] - timestokeep[-8]
testd<-testd[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testd<-cbind(testd,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
testdlevel<-testdlevel[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testdlevel<-cbind(testdlevel,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
# datawide<-ctRemoveObservations(testd,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
# datawidelevel<-ctRemoveObservations(testdlevel,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
ctExample2<-testd
colnames(ctExample2)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
ctExample2level<-testdlevel
colnames(ctExample2level)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
tdpredmodel <- ctModel(n.manifest = 2, n.latent = 2, n.TDpred = 1,
Tpoints = 8, manifestNames = c('LeisureTime', 'Happiness'),
TDpredNames = 'MoneyInt', latentNames = c('LeisureTime', 'Happiness'),
T0TDPREDCOV = matrix(0, nrow = 2, ncol = 7),
TRAITTDPREDCOV = matrix(0, nrow = 2, ncol = 7),
LAMBDA = diag(2), TRAITVAR = "auto")
ll<-c()
for( j in 1:5){
fit <- ctFit(datawide = ctExample2level, ctmodelobj = tdpredmodel,retryattempts=2)
if(is.null(fit$mxobj$output$minimum)) {
j<-j-1
next
}
assign(paste0('fit',j), fit)
ll<-c(ll,fit$mxobj$output$minimum)
print(ll)
llmean<-mean(ll)
llsquareddifs<- lapply(ll,function(x) (llmean - x)^2)[[1]]
sumsquareddifs <- sum(llsquareddifs)
if(sumsquareddifs > 10) break
}
if(sumsquareddifs < 1) checkfits <-TRUE
}
library(ctsem)
# helper function to generate an index matrix, or return unique elements of a matrix
indexMatrix<-function(dimension,symmetrical=FALSE,upper=FALSE,sep=NULL,starttext=NULL,endtext=NULL,
unique=FALSE,rowoffset=0,coloffset=0,indices=FALSE,diagonal=TRUE,namesvector=NULL){
if(is.null(namesvector)) namesvector=1:9999
if(indices==T) sep<-c(",")
tempmatrix<-matrix(paste0(starttext,namesvector[1:dimension+rowoffset],sep,rep(namesvector[1:dimension+coloffset],each=dimension),endtext),nrow=dimension,ncol=dimension)
if(upper==TRUE) tempmatrix<-t(tempmatrix)
if(symmetrical==TRUE) tempmatrix[col(tempmatrix)>row(tempmatrix)] <-t(tempmatrix)[col(tempmatrix)>row(tempmatrix)]
if(unique==TRUE && symmetrical==TRUE) tempmatrix<-tempmatrix[lower.tri(tempmatrix,diag=diagonal)]
if(indices==T){
tempmatrix<-matrix(c(unlist(strsplit(tempmatrix,","))[seq(1,length(tempmatrix)*2,2)],
unlist(strsplit(tempmatrix,","))[seq(2,length(tempmatrix)*2,2)]),ncol=2)
}
return(tempmatrix)
}
#plots means of ctsem wide panel data
meanplot<-function(data,n.manifest,Tpoints,...){
plot(1:Tpoints,rep(0,times=Tpoints),ylim=c(min(colMeans(data[,1:(n.manifest*Tpoints)],na.rm=T)),
max(colMeans(data[,1:(n.manifest*Tpoints)],na.rm=T))),...)
for(i in 1:n.manifest){
points(1:Tpoints,colMeans(data[,seq(i,n.manifest*Tpoints,n.manifest)],na.rm=T),col=(i+1),type="b")
}}
#Allows easy creation of matrices with a diagonal of character vectors.
chardiag<-function(x,dim=x){
out<-diag(dim)
diag(out)<-x
return(out)
}
#' ctGetInits
#'
#' Extracts estimates from a fitted ctsem model and returns in ctsem init matrix layout
#' @param ctfitobject ctsem fit object to extract new starting values from
#' @export
#' @import OpenMx
ctGetInits<-function(ctfitobject){
if(class(ctfitobject)!='ctsemFit') stop('Specified fitobject is not of class ctsemFit')
inits<-matrix(omxGetParameters(ctfitobject$mxobj),ncol=1)
inits<-cbind(names(omxGetParameters(ctfitobject$mxobj)),inits)
return(inits)
}
#Remove observations at random from a wide ctsem format dataset
# @param retainpercent Percent of each row to retain. Must be between 1 and 100, retainpercent/100*Tpoints must generate a whole number.
ctRemoveObservations<-function(datawide,Tpoints,n.manifest,n.TDpred=0,n.TIpred=0,retainpercent=100,
manifestNames="auto",TDpredNames="auto",TIpredNames='auto'){
datalong<-ctWideToLong(datawide,
Tpoints=Tpoints,
n.manifest=n.manifest,
n.TIpred=n.TIpred,
n.TDpred=n.TDpred) #convert to long
datalong<-ctDeintervalise(datalong,
n.manifest=n.manifest,
n.TIpred=n.TIpred,
n.TDpred=n.TDpred) #convert to absolute time
samplelist<-c()
for(i in 1:nrow(datawide)){
samplelist<-c(samplelist,
sample(  ((i-1)*Tpoints+1) :
(i*Tpoints),
ceiling(retainpercent/100 * Tpoints))) #keep retainpercent rows of each individual at random
}
datalong<-datalong[samplelist,,drop=F] #retain only samplelist rows
datalong<-datalong[order(datalong[,"subject"],datalong[,"AbsTime"]),] #fix ordering of rows by time
if(manifestNames=='auto') manifestNames <- paste0("Y",1:n.manifest)
if(n.TDpred >0 && TDpredNames=='auto') TDpredNames <- paste0("TD",1:n.TDpred)
if(n.TDpred ==0) TDpredNames <- NULL
if(n.TIpred >0 && TIpredNames=='auto') TIpredNames <- paste0("TI",1:n.TIpred)
if(n.TIpred == 0) TIpredNames <- NULL
datawide<-ctLongToWide(datalong,
id="subject",
manifestNames=manifestNames,
TDpredNames=TDpredNames,
TIpredNames=TIpredNames,
time="AbsTime")
datawide<-ctIntervalise(datawide,
manifestNames=manifestNames,
TDpredNames=TDpredNames,
TIpredNames=TIpredNames,
Tpoints=Tpoints*retainpercent/100,
n.manifest=n.manifest,
n.TDpred=n.TDpred,
n.TIpred=n.TIpred,
mininterval=.001,
individualRelativeTime=TRUE)
rownames(datawide)<-1:nrow(datawide)
return(datawide)
}
# sets default column names for wide ctsem datasets
ctWideNames<-function(n.manifest,n.TDpred=0,Tpoints,n.TIpred=0,manifestNames='auto',TDpredNames='auto',TIpredNames='auto'){
if(all(manifestNames=='auto')) manifestNames=paste0('Y',1:n.manifest)
if(length(manifestNames) != n.manifest) stop("Length of manifestNames does not equal n.manifest!")
if(n.TDpred > 0){
if(all(TDpredNames=='auto')) TDpredNames=paste0('TD',1:n.TDpred)
if(length(TDpredNames) != n.TDpred) stop("Length of TDpredNames does not equal n.TDpred!")
}
if(n.TIpred > 0){
if(all(TIpredNames=='auto')) TIpredNames=paste0('TI',1:n.TIpred)
if(length(TIpredNames) != n.TIpred) stop("Length of TIpredNames does not equal n.TIpred!")
}
manifestnames<-paste0(manifestNames,"_T",rep(0:(Tpoints-1),each=n.manifest))
if(n.TDpred > 0) TDprednames<-paste0(TDpredNames,"_T",rep(0:(Tpoints-2),each=n.TDpred)) else TDprednames<-NULL
intervalnames<-paste0("dT",1:(Tpoints-1))
if(n.TIpred>0) TIprednames <- paste0(TIpredNames) else TIprednames <- NULL
return(c(manifestnames,TDprednames,intervalnames,TIprednames))
}
checkfits <- FALSE
while(checkfits==FALSE){
Tpoints=20
testm<-ctModel(Tpoints=Tpoints,n.latent=2,n.TDpred=1,n.TIpred=0,n.manifest=2,
LAMBDA=diag(1,2),
MANIFESTVAR=diag(.2,2),
DRIFT=matrix(c(-.3,.12,-.02,-.3),nrow=2,ncol=2),
TRAITVAR=matrix(c(.06,-.012,-.012,.071),ncol=2,nrow=2),
DIFFUSION=diag(c(.12,.3),2),
CINT=matrix(c(1,2),nrow=2),
T0MEANS=matrix(0,ncol=1,nrow=2),
T0VAR=diag(10,2),
TDPRED=matrix(c(.6,.4),nrow=2),
#   TRAITTDPREDCOV=matrix(c(0,0,0,0,0,rep(0,Tpoints-6),0,0,0,0,0,rep(0,Tpoints-6)),nrow=2,ncol=(Tpoints-1)),
TDPREDVAR=diag(c(rep(0,Tpoints-1)),Tpoints-1),
TDPREDMEANS=matrix(c(0,0,0,0,1,rep(0,Tpoints-6)),ncol=1,nrow=(Tpoints-1)))
testd<-ctGenerate(testm,n.subjects=50,burnin=3000) #generate data
#   indplot(testd,Tpoints=Tpoints,n.manifest=2,n.subjects=10,colourby="variable")
testdlevel<-testd
testdlevel[,paste0('TD1_T',5:(Tpoints-2))] <- 1
timestokeep=c(0,1,4,5,7,8,16,19)
deltaT<-timestokeep[-1] - timestokeep[-8]
testd<-testd[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testd<-cbind(testd,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
testdlevel<-testdlevel[,c(paste0('Y',1:2,'_T',rep(timestokeep,each=2)),paste0('TD1_T',timestokeep[-length(timestokeep)]))]
testdlevel<-cbind(testdlevel,matrix(deltaT,nrow=nrow(testd),ncol=length(deltaT),byrow=T))
# datawide<-ctRemoveObservations(testd,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
# datawidelevel<-ctRemoveObservations(testdlevel,retainpercent=50,Tpoints=Tpoints, n.manifest=2,n.TIpred=0,n.TDpred=1)
ctExample2<-testd
colnames(ctExample2)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
ctExample2level<-testdlevel
colnames(ctExample2level)<-ctWideNames(n.manifest=2,Tpoints=length(timestokeep),n.TDpred=1,manifestNames=c('LeisureTime','Happiness'),TDpredNames='MoneyInt')
tdpredmodel <- ctModel(n.manifest = 2, n.latent = 2, n.TDpred = 1,
Tpoints = 8, manifestNames = c('LeisureTime', 'Happiness'),
TDpredNames = 'MoneyInt', latentNames = c('LeisureTime', 'Happiness'),
T0TDPREDCOV = matrix(0, nrow = 2, ncol = 7),
TRAITTDPREDCOV = matrix(0, nrow = 2, ncol = 7),
LAMBDA = diag(2), TRAITVAR = "auto")
ll<-c()
for( j in 1:5){
fit <- ctFit(datawide = ctExample2level, ctmodelobj = tdpredmodel,retryattempts=2)
if(is.null(fit$mxobj$output$minimum)) {
j<-j-1
next
}
assign(paste0('fit',j), fit)
ll<-c(ll,fit$mxobj$output$minimum)
print(ll)
llmean<-mean(ll)
llsquareddifs<- lapply(ll,function(x) (llmean - x)^2)[[1]]
sumsquareddifs <- sum(llsquareddifs)
if(sumsquareddifs > 1) break
}
if(sumsquareddifs < 1) checkfits <-TRUE
}
